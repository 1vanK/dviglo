namespace dviglo
{

/**
\mainpage Documentation

Urho3D (https://urho3d.io/) is a free lightweight, cross-platform 2D and 3D game engine implemented in C++ and released under the MIT license. It utilizes either Direct3D9 or OpenGL for rendering (%Shader %Model 2 or OpenGL 2.0 required as minimum.)

For getting started, see:

\ref Building <br>
\ref UsingLibrary <br>
\ref Running <br>
\ref Examples <br>
\ref Structure <br>
\ref Conventions <br>
\ref EditorInstructions <br>
\ref Misc_HowTos <br>

For further reference, see:

\ref Containers "Container types" <br>
\ref ObjectTypes "Object types and factories" <br>
\ref Subsystems "Subsystems" <br>
\ref Events "Events" <br>
\ref MainLoop "Engine initialization and main loop" <br>
\ref SceneModel "Scene model" <br>
\ref Resources "Resources" <br>
\ref Localization "Localization" <br>
\ref Scripting "Scripting" <br>
\ref LuaScripting "Lua scripting" <br>
\ref Rendering "Rendering" <br>
\ref Input "Input" <br>
\ref Audio "Audio" <br>
\ref Physics "Physics" <br>
\ref Navigation "Navigation" <br>
\ref IK "Inverse Kinematics" <br>
\ref UI "User interface" <br>
\ref Urho2D_and_Physics2D "Urho2D and Physics2D" <br>
\ref Serialization "Serialization" <br>
\ref Network "Networking" <br>
\ref Database "Database" <br>
\ref Multithreading "Multithreading" <br>
\ref AttributeAnimation "Attribute animation" <br>
\ref Tools "Tools" <br>
\ref Unicode "Unicode support" <br>
\ref FileFormats "Custom file formats" <br>
\ref CodingConventions "Coding conventions" <br>
\ref ContributionChecklist "Contribution checklist" <br>

For Urho3D related links and projects, see \ref ExternalLinks "External links".

For credits, copyright and licensing information, see \ref Credits & \ref License.

\page Credits Credits

Urho3D is greatly inspired by OGRE (http://www.ogre3d.org/) and Horde3D (http://www.horde3d.org/). Additional inspiration & research used:

- Rectangle packing by Jukka Jyl&auml;nki (clb) (http://clb.demon.fi/projects/rectangle-bin-packing/)
- Tangent generation from Terathon (http://www.terathon.com/code/tangent.html)
- Fast, Minimum Storage Ray/Triangle Intersection by M&ouml;ller & Trumbore (http://www.graphics.cornell.edu/pubs/1997/MT97.pdf)
- Linear-Speed Vertex Cache Optimisation by Tom Forsyth (http://home.comcast.net/~tom_forsyth/papers/fast_vert_cache_opt.html)
- Software rasterization of triangles based on Chris Hecker's Perspective %Texture Mapping series in the Game Developer magazine (http://chrishecker.com/Miscellaneous_Technical_Articles)
- Networked Physics by Glenn Fiedler (http://gafferongames.com/game-physics/networked-physics/)
- Euler Angle Formulas by David Eberly (https://www.geometrictools.com/Documentation/EulerAngles.pdf)
- Red Black Trees by Julienne Walker (http://eternallyconfuzzled.com/tuts/datastructures/jsw_tut_rbtree.aspx)
- Comparison of several sorting algorithms by Juha Nieminen (http://warp.povusers.org/SortComparison/)

Urho3D uses the following third-party libraries:

- Box2D 2.4.1+ (https://box2d.org)
- Bullet 3.06+ (http://www.bulletphysics.org)
- Civetweb 1.7 (https://github.com/civetweb/civetweb)
- FreeType 2.8 (https://www.freetype.org)
- GLEW 1.13.0 (http://glew.sourceforge.net)
- SLikeNet (https://github.com/SLikeSoft/SLikeNet)
- libcpuid 0.4.0+ (https://github.com/anrieff/libcpuid)
- LZ4 1.7.5 (https://github.com/lz4/lz4)
- pugixml 1.12+ (http://pugixml.org)
- RapidJSON 1.1.0+ (https://github.com/Tencent/rapidjson)
- Recast/Detour (https://github.com/recastnavigation/recastnavigation)
- SDL 2.0.10+ (https://www.libsdl.org)
- SQLite 3.36.0 (https://www.sqlite.org)
- StanHull (https://codesuppository.blogspot.com/2006/03/john-ratcliffs-code-suppository-blog.html)
- stb (https://nothings.org)
- ETCPACK (https://github.com/Ericsson/ETCPACK)
- Tracy 0.7.6 (https://github.com/wolfpld/tracy)

DXT / ETC1 / PVRTC decompression code based on the Squish library and the Oolong %Engine.<br>
Jack and mushroom models from the realXtend project. (https://www.realxtend.org)<br>
Ninja model and terrain, water, smoke, flare and status bar textures from OGRE.<br>
BlueHighway font from Larabie Fonts.<br>
Anonymous Pro font by Mark Simonson.<br>
NinjaSnowWar sounds by Veli-Pekka T&auml;til&auml;.<br>
PBR textures from Substance Share. (https://share.allegorithmic.com)<br>
IBL textures from HDRLab's sIBL Archive.<br>
Dieselpunk Moto model by allexandr007.<br>
Mutant & Kachujin models from Mixamo.<br>
License / copyright information included with the assets as necessary. All other assets (including shaders) by Urho3D authors and licensed similarly as the engine itself.<br>

\page License License

Copyright (c) 2008-2023 the Urho3D project.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

\page ExternalLinks External links

Related projects:

- Blender to Urho3D mesh exporter (https://github.com/reattiva/Urho3D-Blender)

- ParticleEditor2D for Urho3D (https://github.com/aster2013/ParticleEditor2D)

- Urho3D libRocket Integration (https://github.com/realrunner/urho3d-librocket)

- Consolidated Urho3D extra samples (https://github.com/Lumak/Urho3D-Extra-Samples)

Projects using Urho3D:

- heXon - a twin-stick-shooter for up to four players (https://github.com/LucKeyProductions/heXon)

- Quatter - a board game for two players (https://github.com/LucKeyProductions/Quatter)

*/

}
